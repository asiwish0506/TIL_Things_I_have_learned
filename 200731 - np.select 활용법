# 컬럼을 처리하는데, 조건절을 넣어 처리하고 싶을 때 기본적으로는 np.where절을 활용했다.
# 다만 여기서 조건의 수가 많아지면 조금 코드가 복잡해졌는데, np.select절을 통해 이를 처리할 수 있다는 걸 알게 되었다.
  사용법은 다음과 같다.
  
condlist = [final['telf2_new'] != 0, final['telf2_new'] == 0]
choicelist = [final['telf2_new'], final['telf1_new']]

final['telf_num_final'] = np.select(condlist, choicelist)

원하는 조건의 리스트를 만들고, 각각의 조건에 순차적으로 대응하는 선택지의 리스트를 만들어서
아래의 식에 넣으면 된다. np.where절 안에 나열하는것보다 훨씬 가독성이 좋은 듯.

(해당 코드는 특정 컬럼 두 개를 가지고, 양쪽에 값이 다 있을 때, 혹은 한쪽에만 값이 있을 때
 한쪽 컬럼에 우선순위를 두고 두 컬럼을 합치는 코드이다. (a에 값이 있고 b에 값이 없으면 
 a로 합치되, a에 없고 b에만 값이 있으면 b를 갖다 쓰는 식)
